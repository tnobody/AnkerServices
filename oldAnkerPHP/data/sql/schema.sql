CREATE TABLE adressen (id INT AUTO_INCREMENT, alias VARCHAR(50) NOT NULL, strasse_und_hausnr VARCHAR(100) NOT NULL, plz INT UNSIGNED NOT NULL, ort VARCHAR(50) NOT NULL, land VARCHAR(100) NOT NULL, profil_id INT NOT NULL, letzte_aenderung DATETIME NOT NULL, angelegt DATETIME NOT NULL, latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), INDEX profil_id_idx (profil_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE anfragen (anfrage_id INT AUTO_INCREMENT, sf_guard_user_id bigint(20) NOT NULL, kommentar TEXT NOT NULL, profil_id INT NOT NULL, angelegt DATETIME NOT NULL, letzte_aenderung DATETIME NOT NULL, INDEX sf_guard_user_id_idx (sf_guard_user_id), INDEX profil_id_idx (profil_id), PRIMARY KEY(anfrage_id)) ENGINE = INNODB;
CREATE TABLE dokumente (id INT AUTO_INCREMENT, profil_id INT NOT NULL, titel VARCHAR(75) NOT NULL, angelegt DATETIME NOT NULL, letzte_aenderung DATETIME NOT NULL, pfad VARCHAR(255) NOT NULL, INDEX profil_id_idx (profil_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE kompetenz_erworben_bei (ll_id INT, niveau_id INT, PRIMARY KEY(ll_id, niveau_id)) ENGINE = INNODB;
CREATE TABLE kompetenz_kategorien (kompetenz_kategorie_id INT AUTO_INCREMENT, bezeichnung VARCHAR(50) NOT NULL, beschreibung VARCHAR(255) NOT NULL, aktiv TINYINT DEFAULT 0 NOT NULL, root_id BIGINT, lft INT, rgt INT, level SMALLINT, PRIMARY KEY(kompetenz_kategorie_id)) ENGINE = INNODB;
CREATE TABLE kompetenzen (kompetenz_id INT AUTO_INCREMENT, bezeichnung VARCHAR(50) NOT NULL, beschreibung VARCHAR(255) NOT NULL, kompetenz_kategorie_id INT, aktiv TINYINT DEFAULT 0 NOT NULL, letzte_aenderung DATETIME NOT NULL, angelegt DATETIME NOT NULL, INDEX kompetenz_kategorie_id_idx (kompetenz_kategorie_id), PRIMARY KEY(kompetenz_id)) ENGINE = INNODB;
CREATE TABLE lebenslauf (ll_id INT AUTO_INCREMENT, profil_id INT NOT NULL, bezeichnung VARCHAR(255) NOT NULL, beschreibung TEXT NOT NULL, letzte_aenderung DATETIME NOT NULL, art_id INT, beginn DATE NOT NULL, ende DATE, aktiv TINYINT NOT NULL, angelegt DATETIME NOT NULL, INDEX profil_id_idx (profil_id), INDEX art_id_idx (art_id), PRIMARY KEY(ll_id)) ENGINE = INNODB;
CREATE TABLE lebenslauf_kategorien (art_id INT AUTO_INCREMENT, bezeichnung VARCHAR(255) NOT NULL, PRIMARY KEY(art_id)) ENGINE = INNODB;
CREATE TABLE niveaus (niveau_id INT AUTO_INCREMENT, profil_id INT NOT NULL, kompetenz_id INT NOT NULL, zertifikat_id INT, erwerb_id INT, art_kompetenzerwerb text DEFAULT '' NOT NULL, niveau TINYINT NOT NULL, angelegt DATETIME NOT NULL, letzte_aenderung DATETIME NOT NULL, INDEX zertifikat_id_idx (zertifikat_id), INDEX profil_id_idx (profil_id), INDEX kompetenz_id_idx (kompetenz_id), INDEX erwerb_id_idx (erwerb_id), PRIMARY KEY(niveau_id)) ENGINE = INNODB;
CREATE TABLE orte_kompetenzerwerb (erwerb_id INT AUTO_INCREMENT, bezeichnung VARCHAR(50) NOT NULL, PRIMARY KEY(erwerb_id)) ENGINE = INNODB;
CREATE TABLE profile_merkliste (merklisten_id INT AUTO_INCREMENT, query TEXT NOT NULL, angelegt DATETIME NOT NULL, letzte_aenderung DATETIME NOT NULL, sf_guard_user_id bigint(20) NOT NULL, profil_id INT NOT NULL, INDEX sf_guard_user_id_idx (sf_guard_user_id), INDEX profil_id_idx (profil_id), PRIMARY KEY(merklisten_id)) ENGINE = INNODB;
CREATE TABLE profile (profil_id INT AUTO_INCREMENT, vornamen VARCHAR(255) NOT NULL, nachname VARCHAR(60) NOT NULL, geburtsdatum DATE NOT NULL, geschlecht VARCHAR(255) NOT NULL, angelegt DATETIME NOT NULL, letzte_aenderung DATETIME NOT NULL, aktiv TINYINT NOT NULL, geburtsort VARCHAR(100) NOT NULL, geburtsland VARCHAR(100) NOT NULL, nationalitaet VARCHAR(100) NOT NULL, sf_guard_user_id bigint(20) NOT NULL, kontaktadresse INT, INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(profil_id)) ENGINE = INNODB;
CREATE TABLE verfuegbarkeit (datum DATE, profil_id INT, stundenzahl TINYINT, zeitraum text, anmerkung VARCHAR(255), PRIMARY KEY(datum, profil_id)) ENGINE = INNODB;
CREATE TABLE zertifikate (zertifikat_id INT AUTO_INCREMENT, bezeichnung VARCHAR(75) NOT NULL, profil_id INT, beschreibung TEXT, link VARCHAR(255), PRIMARY KEY(zertifikat_id, profil_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE adressen ADD CONSTRAINT adressen_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE anfragen ADD CONSTRAINT anfragen_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE anfragen ADD CONSTRAINT anfragen_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE dokumente ADD CONSTRAINT dokumente_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE kompetenz_erworben_bei ADD CONSTRAINT kompetenz_erworben_bei_niveau_id_niveaus_niveau_id FOREIGN KEY (niveau_id) REFERENCES niveaus(niveau_id);
ALTER TABLE kompetenz_erworben_bei ADD CONSTRAINT kompetenz_erworben_bei_ll_id_lebenslauf_ll_id FOREIGN KEY (ll_id) REFERENCES lebenslauf(ll_id);
ALTER TABLE kompetenzen ADD CONSTRAINT kkkk_1 FOREIGN KEY (kompetenz_kategorie_id) REFERENCES kompetenz_kategorien(kompetenz_kategorie_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE lebenslauf ADD CONSTRAINT lebenslauf_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE lebenslauf ADD CONSTRAINT lebenslauf_art_id_lebenslauf_kategorien_art_id FOREIGN KEY (art_id) REFERENCES lebenslauf_kategorien(art_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE niveaus ADD CONSTRAINT niveaus_zertifikat_id_zertifikate_zertifikat_id FOREIGN KEY (zertifikat_id) REFERENCES zertifikate(zertifikat_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE niveaus ADD CONSTRAINT niveaus_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE niveaus ADD CONSTRAINT niveaus_kompetenz_id_kompetenzen_kompetenz_id FOREIGN KEY (kompetenz_id) REFERENCES kompetenzen(kompetenz_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE niveaus ADD CONSTRAINT niveaus_erwerb_id_orte_kompetenzerwerb_erwerb_id FOREIGN KEY (erwerb_id) REFERENCES orte_kompetenzerwerb(erwerb_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE profile_merkliste ADD CONSTRAINT profile_merkliste_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE profile_merkliste ADD CONSTRAINT profile_merkliste_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE profile ADD CONSTRAINT profile_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE verfuegbarkeit ADD CONSTRAINT verfuegbarkeit_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE zertifikate ADD CONSTRAINT zertifikate_zertifikat_id_niveaus_zertifikat_id FOREIGN KEY (zertifikat_id) REFERENCES niveaus(zertifikat_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE zertifikate ADD CONSTRAINT zertifikate_profil_id_profile_profil_id FOREIGN KEY (profil_id) REFERENCES profile(profil_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
