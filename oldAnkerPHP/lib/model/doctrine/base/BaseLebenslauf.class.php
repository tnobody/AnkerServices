<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lebenslauf', 'doctrine');

/**
 * BaseLebenslauf
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ll_id
 * @property integer $profil_id
 * @property string $bezeichnung
 * @property string $beschreibung
 * @property timestamp $letzte_aenderung
 * @property integer $art_id
 * @property date $beginn
 * @property date $ende
 * @property integer $aktiv
 * @property Profile $Profile
 * @property LebenslaufKategorien $LebenslaufKategorien
 * @property Doctrine_Collection $Niveaus
 * 
 * @method integer              getLlId()                 Returns the current record's "ll_id" value
 * @method integer              getProfilId()             Returns the current record's "profil_id" value
 * @method string               getBezeichnung()          Returns the current record's "bezeichnung" value
 * @method string               getBeschreibung()         Returns the current record's "beschreibung" value
 * @method timestamp            getLetzteAenderung()      Returns the current record's "letzte_aenderung" value
 * @method integer              getArtId()                Returns the current record's "art_id" value
 * @method date                 getBeginn()               Returns the current record's "beginn" value
 * @method date                 getEnde()                 Returns the current record's "ende" value
 * @method integer              getAktiv()                Returns the current record's "aktiv" value
 * @method Profile              getProfile()              Returns the current record's "Profile" value
 * @method LebenslaufKategorien getLebenslaufKategorien() Returns the current record's "LebenslaufKategorien" value
 * @method Doctrine_Collection  getNiveaus()              Returns the current record's "Niveaus" collection
 * @method Lebenslauf           setLlId()                 Sets the current record's "ll_id" value
 * @method Lebenslauf           setProfilId()             Sets the current record's "profil_id" value
 * @method Lebenslauf           setBezeichnung()          Sets the current record's "bezeichnung" value
 * @method Lebenslauf           setBeschreibung()         Sets the current record's "beschreibung" value
 * @method Lebenslauf           setLetzteAenderung()      Sets the current record's "letzte_aenderung" value
 * @method Lebenslauf           setArtId()                Sets the current record's "art_id" value
 * @method Lebenslauf           setBeginn()               Sets the current record's "beginn" value
 * @method Lebenslauf           setEnde()                 Sets the current record's "ende" value
 * @method Lebenslauf           setAktiv()                Sets the current record's "aktiv" value
 * @method Lebenslauf           setProfile()              Sets the current record's "Profile" value
 * @method Lebenslauf           setLebenslaufKategorien() Sets the current record's "LebenslaufKategorien" value
 * @method Lebenslauf           setNiveaus()              Sets the current record's "Niveaus" collection
 * 
 * @package    ankerservices
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLebenslauf extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lebenslauf');
        $this->hasColumn('ll_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('profil_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('bezeichnung', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('beschreibung', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('letzte_aenderung', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('art_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('beginn', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('ende', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('aktiv', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profile', array(
             'local' => 'profil_id',
             'foreign' => 'profil_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('LebenslaufKategorien', array(
             'local' => 'art_id',
             'foreign' => 'art_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Niveaus', array(
             'refClass' => 'KompetenzErworbenBei',
             'local' => 'll_id',
             'foreign' => 'niveau_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'angelegt',
             ),
             'updated' => 
             array(
              'name' => 'letzte_aenderung',
             ),
             ));
        $this->actAs($timestampable0);
    }
}